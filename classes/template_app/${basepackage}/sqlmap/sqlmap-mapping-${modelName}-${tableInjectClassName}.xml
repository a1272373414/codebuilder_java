<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="${modelName}-${injectClassName}">
	<typeAlias alias="${tableClassName}DTO" type="${basepackage}.dto.${tableClassName}DTO" />
	<resultMap id="${injectClassName}DTO" class="${tableClassName}DTO">
		#foreach( $entity in $columnList)
		#if(${columnModel.javaType}=="Date")
		<result column="${columnModel.column}" property="${columnModel.property}" javaType="java.util.${columnModel.javaType}" />
		#else
		<result column="${columnModel.column}" property="${columnModel.property}" javaType="java.lang.${columnModel.javaType}" />
		#end
		#end
	</resultMap>

	<select id="get${tableClassName}List" resultMap="${injectClassName}DTO" parameterClass="java.util.Map">
		SELECT
		#foreach( $entity in $columnList)
		#if($velocityCount==1)
		${columnModel.column}
		#else,${columnModel.column}
		#end
		#end
		FROM ${tableName}
		WHERE 1=1
		#foreach( $entity in $columnList)
		<isNotEmpty prepend="and" property="${columnModel.property}">
			${columnModel.column}=#${columnModel.property}#
		</isNotEmpty>
		#end
		<isNotNull property="sortBy">
			<isEqual property="sortBy" compareValue="1">
				ORDER BY CREATE_TIME DESC
			</isEqual>
			<isEqual property="sortBy" compareValue="2">
				ORDER BY CREATE_TIME ASC
			</isEqual>
		</isNotNull>
		<isNull property="sortBy">
			ORDER BY ${pkName} DESC
		</isNull>
		<isNotEmpty property="pageNo">
			<isNotEmpty property="pageSize">
				LIMIT #pageNo#,#pageSize#
			</isNotEmpty>
		</isNotEmpty>
	</select>

	<select id="get${tableClassName}Count" parameterClass="java.util.Map" resultClass="java.lang.Long">
		SELECT COUNT(1) FROM ${tableName} WHERE 1=1
		#foreach( $entity in $columnList)
		<isNotEmpty prepend="and" property="${columnModel.property}">
			${columnModel.column}=#${columnModel.property}#
		</isNotEmpty>
		#end
	</select>

	<insert id="add${tableClassName}" parameterClass="${tableClassName}DTO">
		INSERT INTO ${tableName}
		<dynamic prepend="(">
			#foreach( $entity in $columnList)
			<isNotNull prepend="," property="${columnModel.property}">
				${columnModel.column}
			</isNotNull>
			#end
			)
		</dynamic>
		VALUES
		<dynamic prepend="(">
			#foreach( $entity in $columnList)
			<isNotNull prepend="," property="${columnModel.property}">
				#${columnModel.property}#
			</isNotNull>
			#end
			)
		</dynamic>
		<selectKey resultClass="long" keyProperty="id" type="post">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
	</insert>

	<insert id="batchAdd${tableClassName}" parameterClass="${tableClassName}DTO">
		INSERT INTO ${tableName}
		<dynamic prepend="(">
			#foreach( $entity in $columnList)
			<isNotNull prepend="," property="${columnModel.property}">
				${columnModel.column}
			</isNotNull>
			#end
			)
		</dynamic>
		VALUES
		<dynamic prepend="(">
			#foreach( $entity in $columnList)
			<isNotNull prepend="," property="${columnModel.property}">
				#${columnModel.property}#
			</isNotNull>
			#end
			)
		</dynamic>
		<selectKey resultClass="long" keyProperty="id" type="post">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
	</insert>

	<delete id="delete${tableClassName}" parameterClass="java.lang.Long">
		DELETE FROM ${tableName} WHERE ID=#id#
	</delete>

	<delete id="deleteBatch${tableClassName}" parameterClass="java.lang.String">
		DELETE FROM ${tableName} WHERE ID IN ($ids$)
	</delete>

	<update id="update${tableClassName}" parameterClass="${tableClassName}DTO">
		UPDATE ${tableName}
		<dynamic prepend="set">
			#foreach( $entity in $columnList)
			#if(${columnModel.column}!=${pkName})
			<isNotNull prepend="," property="${columnModel.property}">
				${columnModel.column}= #${columnModel.property}#
			</isNotNull>
			#end
			#end
		</dynamic>
		WHERE ID = #id#
	</update>

	<select id="get${tableClassName}ById" resultMap="${injectClassName}DTO" parameterClass="java.lang.Long">
		SELECT
		#foreach( $entity in $columnList)
			#if($velocityCount==1)
				${columnModel.column}
			#else,${columnModel.column}
			#end
		#end
		FROM ${tableName}
		WHERE ID = #id#
	</select>

</sqlMap>